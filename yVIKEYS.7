.TH yVIKEYS 0 2010-Jan "linux" "heatherly custom tools manual"
.na

.SH NAME
yVIKEYS \- decision rationale, objectives, and overview

.SH SUMMARY
yVIKEYS is a standardized, fullsome, vi/vim-like, purely keyboard-centric,
modal interface and application framework to provide wicked, powerful, and
high-end features to ALL my applications.

.SH SCOPE, REASONING and DECISION

.B situation (S).  
how to optimally interact with applications is intensely debated -- there are
hundreds of points of view.  any digital environment is made up of thousands of
applications of all sizes and complexities.  every one has a unique interface
and personality.

.B complication (C).  
widely varying comfort, skill-set, and experience of the user base is the root
problem -- both for applications and the system.  most users skim the surface,
some dig deep in one area, some maintain but can not use, very few try to be
both wide and deep.

.B problem (P).  
how do i best serve me ;) i simply don't care about the mouse-using chimps,
touch-screen snot-gobblers, and fucking voice control bullshit :o as the say:
gui's (and all the others) keep simple things simple and make hard things
impossible.

.B my solution (M).  
already pioneered.  move to a standard, one-hundred percent modal keyboard
interface based on an expanded vi/vim-like system.  i will clean it up,
expand it to 3d, machine control, timelines, etc, and apply it ruthlessly to
my applications.

.B target user (T).  
very technical, well-versed, power user.

.B drawbacks...
   -- steep learning curve (already done, don't care about others)
   -- potential conflicts with so many end-uses (noted)
   -- only standard on my systems (unless i have custom input ;))
   -- takes a lot of time to define up front (mostly done)
   -- takes a lot of willpower to stay with it (no problem)
   -- hard to release my application to others (do not care)

.B benefits...
   -- define and test once, use over-and-over
   -- removes a huge design burden for each application (stardard)
   -- make it easy to add extended features (macros, registers, ...)
   -- fast (for me) to learn a new application's interface
   -- easy to switch back-and-forth between applications (same)
   -- never need a mouse, only good use of joystick and touchpad

.SH SEE ALSO
this documentation is layered to provide easier navigation.
   yVIKEYS (3), interfacing applications with yVIKEYS
   yVIKEYS (5), data file format and structure
   yVIKEYS (6), interactive system usage and navigation
   yVIKEYS (7), decision rationale, objectives, and overview
   yVIKEYS (9), user interface requirements (for automation)

.SH AUTHOR
jelloshrike at gmail dot com

.SH COLOPHON
this page is part of a documentation package meant to make use of the
heatherly tools easier and faster.
