.TH vi-keys 7 2010-Jan "linux" "heatherly custom tools manual"
.na

.SH NAME
yVIKEYS \- versatile, efficient, universal keyboard mini-language

.SH SUMMARY
yVIKEYS is a standardized, fullsome, vi/vim-like, purely keyboard-centric,
modal interface and application framework to provide wicked, powerful, and
high-end features to ALL my applications.

.SH PHASE I: minimal setup
only five function calls are required to bring up a framework environment
and functioning event loop.

.B PROG_init...
   -- yVIKEYS_init to initialize library

.B PROG_final...
   -- yVIKEYS_view_config to establish main window and sizing
   -- yVIKEYS_cmds_direct to set the color palette
   -- yVIKEYS_view_colors to assign colors to areas

.B main...
   -- yVIKEYS_main instead of a custom event loop





.SH PREPARATION....

.SS PROG_init.  
before any argument handling, the yVIKEYS library should be initialized with a
call to yVIKEYS_init.

.B yVIKEYS_init.  
this action will take care of a majority of the standard setup and preparation.

.B yVIKEYS_macro_config.  
optional.  provides local macro storage and retrieval functions.

.B yVIKEYS_srch_config.  
provides local searching and marking functions to tailor search.

.SS DRAW_init.  
before drawing begins, it is critical to configure the parts, sizes,
coordinates, and drawing functions involved.

.B yVIKEYS_view_init.  
sets the window title, program version, drawing environment (opengl or
ncurses), and window sizes.

.B yVIKEYS_view_setup, _moderate, simple.  
used for each custom window part to set the corrdinate system, color, and
drawing function.

.B yVIKEYS_view_option.  
adds options to support screen parts, such as the status, formula, overlays,
grids, etc.

.B yVIKEYS_layer_add.  
adds specific main window elements as individual layers so they can be selected
or hidden as desired.

.B yVIKEYS_view_ribbon.  
adds specific icons to the ribbon bar for interactive, opengl, touch screen use.

.B yVIKEYS_cmds_direct (":palette .....").  
establishes a beautiful color scheme including all accents and variations
available for drawing.

.B yVIKEYS_view_colors.  
assigns palette colors to the support windows such as status, ribbon, buffer,
and title.

.B yVIKEYS_cmds_direct (":layout .....").  
sets the base combination of screen parts to display when the program begins.

.B yVIKEYS_cmds_direct (":..... hide/show/...").  
turns individual elements on and off, and allows specific options to be chosen.

.B yVIKEYS_map_config.  
passes the function to be used to map the screen to keyboard keys so yVIKEYS
can function.

.SS PROG_final.  
after all program and drawing initiation, this is where the final actions take
place.

.B yVIKEYS_cmds_add.  
add new commands accessable from the command line to expand the programs
abilities.

.SH MAIN LOOP....

.B yVIKEYS_main_input.  
handles consolidating and recording keyboard input from the user and/or macros.

.B yVIKEYS_main_handle.  
dispatches keys to various handler routines using the standard modal interface.

.B yVIKEYS_quit.  
identifies if program exit has been requested from the command line, i.e., quit.

.B yVIKEYS_view_all.  
coordinates all window drawing from automatic support elements to call-backs
for the main window.


.SH DRAWING ROUTINES....

.B yVIKEYS_view_size.  
retrieve the latest window sizes for the current screen part.

.B yVIKEYS_view_bounds.  
retrieve the latest min and max's for the current screen part.

.B yVIKEYS_view_coords.  
retrieve the latest coordinates for the current screen part.

.B yVIKEYS_view_color and _color_adj.  
choose a particular color for drawing from within the estabished palette.

.SH COMPLETE....

.SS PROG_end.  
after program completion, it is quite simple to shut the library down.

.B yVIKEYS_wrap.  



.SH KEYBOARD MACROS (sub-mode)
.nf
.BI "char yVIKEYS_macro_init      (void *" "a_loader" ", void *" "a_saver" ");"
.BI "char yVIKEYS_macro_wrap      (void);"
.BI "char yVIKEYS_macro_reset     (void);"
.BI "char yVIKEYS_macro_rec_key   (char  " "a_key" ");"
.BI "char yVIKEYS_macro_rec_end   (void);"
.BI "char yVIKEYS_macro_define    (char *" "a_string" ");"
.BI "char yVIKEYS_macro_exec_beg  (char  " "a_name" ");"
.BI "char yVIKEYS_macro_exec_adv  (void);"
.BI "char yVIKEYS_macro_exec_key  (void);"
.BI "char yVIKEYS_macro_exec_wait (void);"
.BI "char yVIKEYS_macro_exec_play (char  " "a_key" ");"
.BI "char yVIKEYS_macro_smode     (char  " "a_major" ", char  " "a_minor" ");"
.BI "char yVIKEYS_macro_get_mode  (void);"
.BI "char yVIKEYS_macro_set_mode  (char  " "a_mode" ");"

.SH MODE
.B setup.  
when you begin the program, you must initialize the mode system.
   yVIKEYS_mode_init  ();
   yVIKEYS_mode_enter (MODE_MAP);



.SH MAP
mapping requires knowledge of the layout within the coordinate system so moves
can be adjusted to real situations.

when you begin the program, you must initialize the mode system.
   yVIKEYS_map_init   ();



.SH COMMANDS
no actions, besides calling yVIKEYS_init, are required for commands to
function properly.  but, there are only two public functions associated with
the command line to add functionality.

.B yVIKEYS_cmds_add, 
temporarily adds a new command to the system, only accessable by this program
instance.  it has six arguments...
   char   cat        standard menu reference
   char*  name       full name of command
   char*  abbr       shortened form of command (if useful)
   char*  terms      description of function argument types
   void*  func       function which implements command
   char*  desc       generally available description

.B yVIKEYS_cmds_direct, 
executes a command without any interactive user input -- useful, simple,
supports batch use.  only one argument...
   char*  command    command line as it would have been typed (:)


.SH SEARCH

.B yVIKEYS_srch_init, 

.B yVIKEYS_srch_found, 
external programs feed each search result to this function to enable moving
directly between results.  only one argument...
   void*  match      pointer to result

.B yVIKEYS_srch_direct, 
executes a search without any interactive user input -- useful, simple,
supports batch use.  only one argument...
   char*  search     search line as it would have been typed (/)


.SH VIEW


.B yVIKEYS_view_init (cchar*, cchar*, cint, cint, cint)

init prepares the view environment for use and takes five arguments.  the first
two are the title and version number.  the next two are the width and height
of the main window.  the final arg is the width of the alt-view window.



.SH SEE ALSO
this documentation is layered to provide easier navigation.
   yVIKEYS (3), interfacing applications with yVIKEYS
   yVIKEYS (5), data file format and structure
   yVIKEYS (6), interactive system usage and navigation
   yVIKEYS (7), decision rationale, objectives, and overview
   yVIKEYS (9), user interface behavior guarantees (automation)

.SH AUTHOR
jelloshrike at gmail dot com

.SH COLOPHON
this page is part of a documentation package meant to make use of the
heatherly tools easier and faster.

